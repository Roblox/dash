local Packages = game:GetService("ReplicatedStorage").Packages
local JestGlobals = require(Packages.Dev.JestGlobals)
local describe = JestGlobals.describe
local it = JestGlobals.it
local expect = JestGlobals.expect

local Dash = require(Packages.Dash)
local slice = Dash.slice

describe("slice", function()
	it("should return a copy of an array with no index arguments", function()
		local output = slice({ 1, 2, 3, 4, 5 })
		expect(output).toEqual({ 1, 2, 3, 4, 5 })
	end)
	it("should return a slice with positive left index", function()
		local output = slice({ 1, 2, 3, 4, 5 }, 2)
		expect(output).toEqual({ 2, 3, 4, 5 })
	end)
	it("should return a slice with positive indices", function()
		local output = slice({ 1, 2, 3, 4, 5 }, 2, 4)
		expect(output).toEqual({ 2, 3, 4 })
	end)
	it("should return a slice with negative left index", function()
		local output = slice({ 1, 2, 3, 4, 5 }, -2)
		expect(output).toEqual({ 3, 4, 5 })
	end)
	it("should return a slice with negative right index", function()
		local output = slice({ 1, 2, 3, 4, 5 }, 2, -1)
		expect(output).toEqual({ 2, 3, 4 })
	end)
	it("should return a slice with negative indices", function()
		local output = slice({ 1, 2, 3, 4, 5 }, -3, -1)
		expect(output).toEqual({ 2, 3, 4 })
	end)
	it("should return a slice with positive left & negative right indices", function()
		local output = slice({ 1, 2, 3, 4, 5 }, 2, -1)
		expect(output).toEqual({ 2, 3, 4 })
	end)
	it("should return a slice with negative left & positive right indices", function()
		local output = slice({ 1, 2, 3, 4, 5 }, -3, 4)
		expect(output).toEqual({ 2, 3, 4 })
	end)
	it("should return an empty slice for invalid positive indices", function()
		local output = slice({ 1, 2, 3, 4, 5 }, 100, 1000)
		expect(output).toEqual({})
	end)
	it("should return an empty slice for invalid negative indices", function()
		local output = slice({ 1, 2, 3, 4, 5 }, -100, -1000)
		expect(output).toEqual({})
	end)
	it("should return an empty slice for swapped indices", function()
		local output = slice({ 1, 2, 3, 4, 5 }, 4, 3)
		expect(output).toEqual({})
	end)
end)
