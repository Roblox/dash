return function()
	local Dash = require(script.Parent)
	local shallowEqual = Dash.shallowEqual

	describe("shallowEqual", function()
		it("should run correctly for primitive inputs", function()
			assertSnapshot(shallowEqual("toast", "toast"))
			assertSnapshot(shallowEqual("toast", "bread"))
			assertSnapshot(shallowEqual(5, 5))
			assertSnapshot(shallowEqual(5, 50))
			assertSnapshot(shallowEqual("toast", 5))
			assertSnapshot(shallowEqual(5, "5"))
			assertSnapshot(shallowEqual(5, nil))
			assertSnapshot(shallowEqual(nil, nil))
		end)
		it("should run correctly for one table input", function()
			assertSnapshot(shallowEqual({}, "toast"))
			assertSnapshot(shallowEqual("toast", {}))
			assertSnapshot(shallowEqual({}, nil))
			assertSnapshot(shallowEqual(nil, {}))
		end)
		it("should run correctly for arrays", function()
			assertSnapshot(shallowEqual({}, {}))
			assertSnapshot(shallowEqual({}, {1, 2, 3}))
			assertSnapshot(shallowEqual({1, 2, 3}, {1, 2, 3}))
		end)
		it("should run correctly for maps", function()
			assertSnapshot(shallowEqual({x = 3}, {x = 3}))
			assertSnapshot(shallowEqual({x = 3}, {x = 3, y = 4}))
			assertSnapshot(shallowEqual({x = 3, y = 4}, {x = 3, y = 4000}))
			assertSnapshot(shallowEqual({x = 3, y = 4000}, {x = 3}))
			local child = {d = 9}
			assertSnapshot(shallowEqual({x = 3, y = child}, {x = 3, y = child}))
			assertSnapshot(shallowEqual({x = 3, y = child}, {x = 3, y = {d = 9}}))
		end)
	end)
end
